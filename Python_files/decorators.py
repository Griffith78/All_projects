def Func_Decorator(some_func):#Пишем декоратор а то есть самую обычную функцию которая принимает в качестве аргумента другую функцию.Этот декоратор будет перехватывать возможную ошибку
    def wrapper():#делаем еще одну функцию в которую должны передать те же аргументы что и в декорируемой функции
        try:#пытаемся исполнить декорируемую функции
            some_func()#вызов декорируемой функции в которую ничего не передаем
        except ZeroDivisionError:#обрабатываем ошибку деления на ноль
            print("Одно из чисел равняется нулю")#выводим сообщение об ошибку
    return wrapper#возвращаем функцию wrapper в декораторе


@Func_Decorator#указываем что будем декорировать функцию
def some_func():
    A:int = int(input("Введите число А"))
    B:int = int(input("Введите число B"))
    print(A // B)#

some_func()#вызов функции