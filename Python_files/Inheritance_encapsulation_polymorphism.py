#изучим инкапсуляцию наследование и полиморфизм
class Book:#прописываем класс родитель который будет наследовать все методы и поля в будущих классах
    author = None#два нижних подчеркивания это и есть инкапсуляция а то есть защита данных
    __title = None

    def __init(self,author:str,title:str):#прописываем конструкотор и другие классы будут наследовать его поля
        self.author =  author
        self.title = title

    def get_info(self):#прописываем метод для вывода информации о книге
        print(f"автор книги: {self.author} название книги: {self.title} ")

class AST(Book):#создаем новый класс который будет наследовать все от класса родителя. Указав родителя в скобках му указываем что класс будет все наследовать от него. Это наследование
    city = None

    def __init(self,city:str,author:str,title:str):#все тот же конструктор только добавляем параметр city в который запишем город где находится завод
        super(AST,self).init(author,title)#здесь мы вызываем конструктор класса родителя обращаясь к нему с поммощью super. Когда после init пишем автора и название мы указываем какие переменные выводит а то есть переменные которые передал пользователь. Важно чтобы порядок передачи переменных совподал с классом родителем
        self.city = city#новый параметр



class Ripol(AST):#в python нельзя указать несколько классов родителей но можно создовать новые классы указывая прошлые
    def init(self,city:str,author:str,title:str,pages:int ):#тоже добавляем новый параметр количество страниц
        super(Ripol,self).init(city,author,title)#делаем то же самое что и выше
        self.pages = pages#создаем параметр страниц

    def get_info(self):#дополняем методы класса родителя. Написав такое же название мы совершаем полиморфизм а то есть дополнение или полное переписывание функции в классе родителе
         super().get_info()#вызываем метод вывода их класса родителя. Так как в рошлом классе ничего с этим методом не делали придется указывать город и страницы
         print(f"город в котором построен завод: {self.city} количество страниц в книге: {self.pages}")#вывод добавленых параметров

class Alpina(Book):#
    pass

class Eksmo(Book):#
    pass

AST1 = AST(author = "Анджей сапковский", title = "Ведьмак: Последне Желание",city = "Москва" )#
Alpina1 = Alpina(author = "Анджей сапковский",title = "Ведьмак: Час Презрения ")#
Eksmo1 = Eksmo(author = "Л.Н. Толстой", title = "Война и Мир")#
Ripol = Ripol(author = "М.Ю.Лермонтов", title = "Герой Нашего Времени", city = "новсибирск", pages = 322)#
AST1.get_info()#
Alpina1.get_info()#
Eksmo1.get_info()#
Ripol.get_info()#